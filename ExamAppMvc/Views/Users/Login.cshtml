@model ExamAppMvc.Models.DbModel.User

@{
    Layout = null;
}

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <link href="https://fonts.googleapis.com/css?family=Lato:300,400,700&display=swap" rel="stylesheet">

    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">

    @*<link rel="stylesheet" href="css/style.css">*@
    <link href="~/Content/Style.css" rel="stylesheet" />
</head>




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <section class="ftco-section">
        <div class="container">
            @if (TempData["Message"] != null)
            {
            <div class="alert alert-danger" role="alert">
                @TempData["Message"]
            </div>
              
            }
            <div class="row justify-content-center">

                <div class="col-md-6 text-center mb-5">
                    <h2 class="heading-section">Login</h2>
                </div>
            </div>
            <div class="row justify-content-center">
                <div class="col-md-7 col-lg-5">
                    <div class="login-wrap p-4 p-md-5">
                        <div class="icon d-flex align-items-center justify-content-center">
                            <span class="fa fa-user-o"></span>
                        </div>
                        <h3 class="text-center mb-4">Sign up</h3>

                        <div class="form-horizontal">
                            <h4>User</h4>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group">
                                @*<input type="text" class="form-control rounded-left" placeholder="Username" name="Email" required>*@
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control rounded-left", @placeholder = "Email" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

                            </div>

                            <div class="form-group d-flex">
                                @*<input type="password" class="form-control rounded-left" placeholder="Password" name="Password" required>*@
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control rounded-left", @placeholder = "Password", @type = "password" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

                            </div>
                            <div class="form-group">
                                @*<button type="submit" class="form-control btn btn-primary rounded submit px-3">Login</button>*@

                                @*<input type="submit" value="Register" class="form-control btn btn-primary rounded submit px-3" formaction="/User/Create/" formmethod="post" />*@
                                <div class="form-group">

                                    <input type="submit" value="Sign In" class="form-control btn btn-primary rounded submit px-3" />

                                </div>
                                <div class="form-group">
                                    <button type="button" onclick="location.href='@Url.Action("Create", "Users")'" class="form-control btn btn-primary rounded submit px-3">Registration</button>

                                </div>
                            </div>


                            @if (Session["LoginError"] != null)
                            {
                                <div class="alert alert-danger" role="alert">
                                    Email or password incorrect
                                </div>
                                Session["LoginError"] = null;
                            }
                            @if (TempData["PasswordError"] != null)
                            {
                        <div class="alert alert-danger" role="alert">
                            @TempData["PasswordError"] 
                        </div>
                                Session["LoginError"] = null;
                            }
                         
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
}




    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script src="~/Scripts/popper.js"></script>
        <script src="~/Scripts/jquery-3.4.1.min.js"></script>
        <script src="~/Scripts/bootstrap.min.js"></script>
        <script src="~/Scripts/main.js"></script>
    }


